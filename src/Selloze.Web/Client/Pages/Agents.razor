@page "/agents"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Selloze.Web.Shared
@attribute [Authorize]
@inject HttpClient Http

@inject IAuthorizationService AuthorizationService

<h1>Agents</h1>

@if (agents == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Agent</th>
                <th>Last Activity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var agent in agents)
            {
                <tr>
                    <td>@agent.AgentCode</td>
                    <td>@agent.LastActivity</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Agent[] agents;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var user = (await authenticationStateTask).User;

            var userName = user.Identity.Name;

            agents = await Http.GetFromJsonAsync<Agent[]>("Agents/" + userName);
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}
